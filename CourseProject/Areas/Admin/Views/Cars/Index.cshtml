@using CourseProject.Models.ViewModels
@model PaginatedList<Car>

@{
    ViewData["Title"] = "Cars list";
}

<h1>Cars</h1>
<hr>

<p>
    <a asp-action="Create" class="btn btn-primary btn-lg">Create New</a>
</p>


@{await Html.RenderPartialAsync("_CarSearchForm", (CarSearchViewModel)ViewBag.CarSearchModel);}

<table class="table">
    <thead>
        <tr>
            @*<th>
                @Html.DisplayNameFor(model => model[0].Year)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].EngineVolume)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Mileage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].FuelType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].BodyType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].TransmissionType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Color)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Count)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Presence)
            </th>
            <th>Image</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                @*<td>
                    @Html.DisplayFor(modelItem => item.Year)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @item.Model.Brand.Name @item.Model.Parent?.Name @item.Model.Name @item.Year
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EngineVolume)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Mileage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FuelType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BodyType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TransmissionType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Color)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Count)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Presence)
                </td>
                <td>
                    @if (item.CarImages.Count > 0) {
                        <img src="@item.CarImages.First().Path" alt="" style="width: 100px">
                    }
                </td>
                <td>

                    <div class="dropdown">
                        <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton-@item.Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Actions
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton-@item.Id">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="dropdown-item">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="dropdown-item">Details</a>
                            @if (item.State == Car.CarState.New) {
                                <a asp-controller="SupplyRequests" asp-action="Create" asp-route-carId="@item.Id" class="dropdown-item">Create supply request</a>
                            }
                            <div class="dropdown-divider"></div>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="dropdown-item">Delete</a>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a href="@Url.Action("Index")@ViewBag.QueryString@("page=" + (Model.PageIndex - 1))" class="btn btn-primary @prevDisabled">Prev</a>
<a href="@Url.Action("Index")@ViewBag.QueryString@("page=" + (Model.PageIndex + 1))" class="btn btn-primary @nextDisabled">Next</a>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(() => {
            $('#brands-list').on('click',
                'option',
                (e) => {
                    console.log(e.target.value);
                    const brandId = encodeURIComponent(e.target.value);

                    $('#models-list').load(`@Url.Action("GetModelsByBrand", "Home", new {Area = ""})?brandId=${brandId}`);
                    $('#models-list').prepend('<option value=""></option>');
                });
        });
    </script>
}